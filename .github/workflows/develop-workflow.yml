name: develop-workflow

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

defaults:
  run:
    working-directory: server

permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
        token: ${{ secrets.ACTION_TOKEN }}
    - name: JDK 21을 설치합니다
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'corretto'

    - name: Gradle 명령 실행을 위한 권한을 부여합니다
      run: chmod +x gradlew

    - name: Gradle build를 수행합니다
      run: ./gradlew clean build

    - name: 테스트 결과를 작성합니다
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: '**/build/test-results/test/TEST-*.xml'

    - name: 테스트가 실패한 위치에 코멘트를 작성합니다
      uses: mikepenz/action-junit-report@v4
      if: failure()
      with:
        report_paths: '**/build/test-results/test/TEST-*.xml'

  deploy:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
        token: ${{ secrets.ACTION_TOKEN }}
    - name: JDK 21을 설치합니다
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'corretto'

    - name: Gradle 명령 실행을 위한 권한을 부여합니다
      run: chmod +x gradlew

    - name: Gradle build를 수행합니다
      run: ./gradlew bootJar
      
    - name: 빌드 후 생긴 jar 파일을 서버에 전송합니다.
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        port: ${{ secrets.PORT }}
        key: ${{ secrets.KEY }}
        source: 'server/build/libs/server-0.0.1-SNAPSHOT.jar'
        target: '/home/ubuntu'
    
    - name: ssh로 서버에 접속하여 배포 스크립트를 실행합니다
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        script: ./deploy-nonstop.sh
